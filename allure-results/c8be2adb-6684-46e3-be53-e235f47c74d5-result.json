{"name": "Тест попытки повторного создания курьера с теми же данными", "status": "failed", "statusDetails": {"message": "AssertionError: Ошибка логина: {'resp_code': 409, 'text': '{\"code\":409,\"message\":\"Этот логин уже используется. Попробуйте другой.\"}', 'resp_json_data': {'code': 409, 'message': 'Этот логин уже используется. Попробуйте другой.'}, 'message': 'Этот логин уже используется. Попробуйте другой.'}\nassert 'Этот логин у...буйте другой.' == 'Этот логин уже используется'\n  \n  - Этот логин уже используется\n  + Этот логин уже используется. Попробуйте другой.", "trace": "self = <test_courier_create.TestCourierСreate object at 0x104a87710>\nrandom_courier = {'data': {'first_name': 'nmwncvvzee', 'login': 'rqtrwfcayf', 'password': 'zptlhrubiu'}, 'resp_code': 201, 'resp_json_data': {'ok': True}, 'text': '{\"ok\":true}'}\n\n    @allure.title(\"Тест попытки повторного создания курьера с теми же данными\")\n    @allure.description(\"Регистрируем курьера, затем повторно пробуем создать его с теми же данными.\")\n    def test_courier_create_twice_fail(self, random_courier):\n        data = random_courier['data']\n        courier = Courier()\n    \n        with allure.step(\"Повторная попытка регистрации с теми же данными\"):\n            duplicate_response = courier.register_new_courier(data['login'], data['password'], data['first_name'])\n        print(duplicate_response)\n        with allure.step(\"Проверяем, что API вернуло 409 (конфликт)\"):\n            assert duplicate_response[\n                       'resp_code'] == 409, f\"Повторная регистрация не вызвала ошибку: {duplicate_response}\"\n    \n>           assert duplicate_response['resp_json_data']['message'] == \"Этот логин уже используется\", f\"Ошибка логина: {duplicate_response}\"\nE           AssertionError: Ошибка логина: {'resp_code': 409, 'text': '{\"code\":409,\"message\":\"Этот логин уже используется. Попробуйте другой.\"}', 'resp_json_data': {'code': 409, 'message': 'Этот логин уже используется. Попробуйте другой.'}, 'message': 'Этот логин уже используется. Попробуйте другой.'}\nE           assert 'Этот логин у...буйте другой.' == 'Этот логин уже используется'\nE             \nE             - Этот логин уже используется\nE             + Этот логин уже используется. Попробуйте другой.\n\ntests/test_courier_create.py:44: AssertionError"}, "description": "Регистрируем курьера, затем повторно пробуем создать его с теми же данными.", "steps": [{"name": "Повторная попытка регистрации с теми же данными", "status": "passed", "steps": [{"name": "Регистрация нового курьера", "status": "passed", "parameters": [{"name": "login", "value": "'rqtrwfcayf'"}, {"name": "password", "value": "'zptlhrubiu'"}, {"name": "firstName", "value": "'nmwncvvzee'"}], "start": 1740824844919, "stop": 1740824845351}], "start": 1740824844919, "stop": 1740824845351}, {"name": "Проверяем, что API вернуло 409 (конфликт)", "status": "failed", "statusDetails": {"message": "AssertionError: Ошибка логина: {'resp_code': 409, 'text': '{\"code\":409,\"message\":\"Этот логин уже используется. Попробуйте другой.\"}', 'resp_json_data': {'code': 409, 'message': 'Этот логин уже используется. Попробуйте другой.'}, 'message': 'Этот логин уже используется. Попробуйте другой.'}\nassert 'Этот логин у...буйте другой.' == 'Этот логин уже используется'\n  \n  - Этот логин уже используется\n  + Этот логин уже используется. Попробуйте другой.\n", "trace": "  File \"/Users/nikita/PycharmProjects/Sprint_7/tests/test_courier_create.py\", line 44, in test_courier_create_twice_fail\n    assert duplicate_response['resp_json_data']['message'] == \"Этот логин уже используется\", f\"Ошибка логина: {duplicate_response}\"\n"}, "start": 1740824845352, "stop": 1740824845354}], "attachments": [{"name": "log", "source": "4e411d7c-e41b-4329-9dab-ef2e8f72441e-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "ea31e99b-72c3-48b2-827f-b8ca7edefa45-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "93246966-8d50-4455-af16-decf031399cb-attachment.txt", "type": "text/plain"}], "start": 1740824844919, "stop": 1740824845356, "uuid": "50b22839-810a-41ec-8517-4e8c4eb0f7e2", "historyId": "185e1a091139f3ba7470146e33861b63", "testCaseId": "185e1a091139f3ba7470146e33861b63", "fullName": "tests.test_courier_create.TestCourierСreate#test_courier_create_twice_fail", "labels": [{"name": "suite", "value": "Courier Create"}, {"name": "parentSuite", "value": "tests"}, {"name": "subSuite", "value": "TestCourierСreate"}, {"name": "host", "value": "MacBook-Pro-Nikita.local"}, {"name": "thread", "value": "72050-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_courier_create"}]}