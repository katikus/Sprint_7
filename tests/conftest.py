import pytest
import logging

logging.basicConfig(level=logging.INFO, format=" \n %(asctime)s [%(levelname)s] %(message)s")

# –ù–∞—Å—Ç—Ä–æ–∏–º –ª–æ–≥–≥–µ—Ä
logger = logging.getLogger(__name__)



from support_functions.courier import create_random_courier_data, Courier


@pytest.fixture(scope="function")
def random_courier():
    """–§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞"""
    data = create_random_courier_data()
    courier = Courier()
    response = courier.register_new_courier(data['login'], data['password'], data['first_name'])

    logger.info(f"‚úÖ –ö—É—Ä—å–µ—Ä —Å–æ–∑–¥–∞–Ω: {data}")
    #print(f"\n ‚úÖ –ö—É—Ä—å–µ—Ä —Å–æ–∑–¥–∞–Ω: {data}")
    assert response['resp_code'] == 201, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫—É—Ä—å–µ—Ä–∞: {response}"

    yield {
        'resp_data': response['resp_data'],
        'data': data
    }

    # –£–¥–∞–ª—è–µ–º –∫—É—Ä—å–µ—Ä–∞ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞
    login_resp = courier.login_courier(data['login'], data['password'])
    if login_resp.get('resp_code') == 200:
        courier_id = login_resp.get('resp_data').get('id')
        delete_resp = courier.delete_courier(courier_id)
        assert delete_resp['resp_code'] == 200, f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞: {delete_resp}"
        logger.info(f"üóëÔ∏è –ö—É—Ä—å–µ—Ä {courier_id} —É–¥–∞–ª–µ–Ω")
    else:
        logger.warning(f"‚ö†Ô∏è –ö—É—Ä—å–µ—Ä {data['login']} –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —É–¥–∞–ª–µ–Ω–∏—è")