
import pytest
import logging
import copy

import requests

from data.data import UserData
from support_functions.order import Order

# –ù–∞—Å—Ç—Ä–æ–∏–º –ª–æ–≥–≥–µ—Ä
logger = logging.getLogger(__name__)



@pytest.mark.parametrize("test_color", [["BLACK"], ["GREY"],["GREY", "BLACK"], []])
def test_order_create_success(test_color):
    """–¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ü–≤–µ—Ç–∞–º–∏"""

    payload = copy.deepcopy(UserData.ORDER_DATA)
    payload["color"] = test_color

    logger.info(f"üì¶ –í –∑–∞–∫–∞–∑ –ø–µ—Ä–µ–¥–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ - {payload}")

    # –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑
    order = Order()
    order_resp = order.create_order(payload)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–≤–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É
    assert order_resp.get("resp_code") == 201, f"–û—à–∏–±–∫–∞: –ó–∞–∫–∞–∑ –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω"
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –æ—Ç–≤–µ—Ç–µ –µ—Å—Ç—å 'track'
    assert "track" in order_resp["resp_data"]